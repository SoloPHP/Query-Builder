name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php-versions: ['8.2', '8.3', '8.4']
        dependency-versions: ['prefer-lowest', 'prefer-stable']

    name: PHP ${{ matrix.php-versions }} - ${{ matrix.dependency-versions }}

    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-versions }}
        extensions: pdo, pdo_mysql, pdo_pgsql, pdo_sqlite
        coverage: xdebug

    - name: Get composer cache directory
      id: composer-cache
      run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-${{ matrix.dependency-versions }}-${{ hashFiles('**/composer.json') }}
        restore-keys: ${{ runner.os }}-composer-${{ matrix.dependency-versions }}-

    - name: Install dependencies
      run: |
        composer update --${{ matrix.dependency-versions }} --prefer-dist --no-interaction --no-progress

    - name: Run tests
      run: composer test

  code-style:
    runs-on: ubuntu-latest
    name: Code Style

    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: pdo
        tools: cs2pr

    - name: Get composer cache directory
      id: composer-cache
      run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-prefer-stable-${{ hashFiles('**/composer.json') }}
        restore-keys: ${{ runner.os }}-composer-prefer-stable-

    - name: Install dependencies
      run: composer install --prefer-dist --no-interaction --no-progress

    - name: Check code style
      run: composer cs-check -- --report=checkstyle | cs2pr

  static-analysis:
    runs-on: ubuntu-latest
    name: Static Analysis

    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: pdo

    - name: Get composer cache directory
      id: composer-cache
      run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-prefer-stable-${{ hashFiles('**/composer.json') }}
        restore-keys: ${{ runner.os }}-composer-prefer-stable-

    - name: Install dependencies
      run: composer install --prefer-dist --no-interaction --no-progress

    - name: Check composer.json
      run: composer validate --strict

  coverage:
    runs-on: ubuntu-latest
    name: Code Coverage

    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: pdo, pdo_sqlite
        coverage: xdebug

    - name: Get composer cache directory
      id: composer-cache
      run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-composer-prefer-stable-${{ hashFiles('**/composer.json') }}
        restore-keys: ${{ runner.os }}-composer-prefer-stable-

    - name: Install dependencies
      run: composer install --prefer-dist --no-interaction --no-progress

    - name: Run tests with coverage
      run: vendor/bin/phpunit --coverage-clover coverage.xml

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false# Trigger CI
